// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: RandomPicker.proto

package prooto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReportWeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Date         string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	WindS        string `protobuf:"bytes,3,opt,name=windS,proto3" json:"windS,omitempty"`
	Tempernature string `protobuf:"bytes,4,opt,name=tempernature,proto3" json:"tempernature,omitempty"`
	Rain         string `protobuf:"bytes,5,opt,name=rain,proto3" json:"rain,omitempty"`
	Sun          string `protobuf:"bytes,6,opt,name=sun,proto3" json:"sun,omitempty"`
}

func (x *ReportWeatherRequest) Reset() {
	*x = ReportWeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportWeatherRequest) ProtoMessage() {}

func (x *ReportWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportWeatherRequest.ProtoReflect.Descriptor instead.
func (*ReportWeatherRequest) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{0}
}

func (x *ReportWeatherRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportWeatherRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ReportWeatherRequest) GetWindS() string {
	if x != nil {
		return x.WindS
	}
	return ""
}

func (x *ReportWeatherRequest) GetTempernature() string {
	if x != nil {
		return x.Tempernature
	}
	return ""
}

func (x *ReportWeatherRequest) GetRain() string {
	if x != nil {
		return x.Rain
	}
	return ""
}

func (x *ReportWeatherRequest) GetSun() string {
	if x != nil {
		return x.Sun
	}
	return ""
}

type ReportWeatherReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ReportWeatherReponse) Reset() {
	*x = ReportWeatherReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportWeatherReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportWeatherReponse) ProtoMessage() {}

func (x *ReportWeatherReponse) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportWeatherReponse.ProtoReflect.Descriptor instead.
func (*ReportWeatherReponse) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{1}
}

func (x *ReportWeatherReponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type WeatherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City string `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *WeatherRequest) Reset() {
	*x = WeatherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherRequest) ProtoMessage() {}

func (x *WeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherRequest.ProtoReflect.Descriptor instead.
func (*WeatherRequest) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{2}
}

func (x *WeatherRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

type WeatherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City        string  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WeatherResponse) Reset() {
	*x = WeatherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherResponse) ProtoMessage() {}

func (x *WeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherResponse.ProtoReflect.Descriptor instead.
func (*WeatherResponse) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{3}
}

func (x *WeatherResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WeatherResponse) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *WeatherResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type WeatherForecastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	City           string      `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	DailyForecasts []*Forecast `protobuf:"bytes,2,rep,name=dailyForecasts,proto3" json:"dailyForecasts,omitempty"`
}

func (x *WeatherForecastResponse) Reset() {
	*x = WeatherForecastResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeatherForecastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherForecastResponse) ProtoMessage() {}

func (x *WeatherForecastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherForecastResponse.ProtoReflect.Descriptor instead.
func (*WeatherForecastResponse) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{4}
}

func (x *WeatherForecastResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WeatherForecastResponse) GetDailyForecasts() []*Forecast {
	if x != nil {
		return x.DailyForecasts
	}
	return nil
}

type Forecast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string  `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Description string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Forecast) Reset() {
	*x = Forecast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RandomPicker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Forecast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forecast) ProtoMessage() {}

func (x *Forecast) ProtoReflect() protoreflect.Message {
	mi := &file_RandomPicker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forecast.ProtoReflect.Descriptor instead.
func (*Forecast) Descriptor() ([]byte, []int) {
	return file_RandomPicker_proto_rawDescGZIP(), []int{5}
}

func (x *Forecast) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Forecast) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Forecast) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_RandomPicker_proto protoreflect.FileDescriptor

var file_RandomPicker_proto_rawDesc = []byte{
	0x0a, 0x12, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x6e, 0x64, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x6e,
	0x64, 0x53, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x6e, 0x22, 0x2c, 0x0a, 0x14,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x24, 0x0a, 0x0e, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x22, 0x69, 0x0a, 0x0f, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x17, 0x57,
	0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0e, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x52, 0x0e, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x08, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xfb, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65,
	0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x65, 0x61,
	0x74, 0x68, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x65, 0x61, 0x74,
	0x68, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_RandomPicker_proto_rawDescOnce sync.Once
	file_RandomPicker_proto_rawDescData = file_RandomPicker_proto_rawDesc
)

func file_RandomPicker_proto_rawDescGZIP() []byte {
	file_RandomPicker_proto_rawDescOnce.Do(func() {
		file_RandomPicker_proto_rawDescData = protoimpl.X.CompressGZIP(file_RandomPicker_proto_rawDescData)
	})
	return file_RandomPicker_proto_rawDescData
}

var file_RandomPicker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_RandomPicker_proto_goTypes = []interface{}{
	(*ReportWeatherRequest)(nil),    // 0: proto.ReportWeatherRequest
	(*ReportWeatherReponse)(nil),    // 1: proto.ReportWeatherReponse
	(*WeatherRequest)(nil),          // 2: proto.WeatherRequest
	(*WeatherResponse)(nil),         // 3: proto.WeatherResponse
	(*WeatherForecastResponse)(nil), // 4: proto.WeatherForecastResponse
	(*Forecast)(nil),                // 5: proto.Forecast
}
var file_RandomPicker_proto_depIdxs = []int32{
	5, // 0: proto.WeatherForecastResponse.dailyForecasts:type_name -> proto.Forecast
	0, // 1: proto.WeatherService.ReportWeatherCondition:input_type -> proto.ReportWeatherRequest
	2, // 2: proto.WeatherService.GetCurrentWeather:input_type -> proto.WeatherRequest
	2, // 3: proto.WeatherService.GetWeatherForecast:input_type -> proto.WeatherRequest
	1, // 4: proto.WeatherService.ReportWeatherCondition:output_type -> proto.ReportWeatherReponse
	3, // 5: proto.WeatherService.GetCurrentWeather:output_type -> proto.WeatherResponse
	4, // 6: proto.WeatherService.GetWeatherForecast:output_type -> proto.WeatherForecastResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_RandomPicker_proto_init() }
func file_RandomPicker_proto_init() {
	if File_RandomPicker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_RandomPicker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportWeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RandomPicker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportWeatherReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RandomPicker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RandomPicker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RandomPicker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeatherForecastResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RandomPicker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Forecast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RandomPicker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_RandomPicker_proto_goTypes,
		DependencyIndexes: file_RandomPicker_proto_depIdxs,
		MessageInfos:      file_RandomPicker_proto_msgTypes,
	}.Build()
	File_RandomPicker_proto = out.File
	file_RandomPicker_proto_rawDesc = nil
	file_RandomPicker_proto_goTypes = nil
	file_RandomPicker_proto_depIdxs = nil
}
